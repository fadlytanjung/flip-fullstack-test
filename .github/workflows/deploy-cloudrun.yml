name: Deploy to Cloud Run

on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      target:
        description: 'Deploy target: frontend, backend, or all'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - frontend
          - backend

permissions:
  contents: read
  id-token: write

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  REGION: ${{ secrets.GCP_REGION }}
  REGISTRY: ${{ secrets.GCP_REGION }}-docker.pkg.dev
  REPOSITORY: flip-fullstack-test
  # Backend API URL - set via GitHub secret
  NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}

jobs:
  # Detect which files changed
  changes:
    name: Trigger
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    outputs:
      backend: ${{ steps.filter.outputs.backend }}
      frontend: ${{ steps.filter.outputs.frontend }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Check for file changes
        uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            backend:
              - 'backend/**'
              - '.github/workflows/deploy-cloudrun.yml'
            frontend:
              - 'frontend/**'
              - '.github/workflows/deploy-cloudrun.yml'

  # Deploy Backend
  deploy-backend:
    name: Deploy Backend
    runs-on: ubuntu-latest
    needs: [changes]
    if: |
      always() &&
      (needs.changes.result == 'skipped' || needs.changes.result == 'success') &&
      (
        (github.event_name == 'workflow_dispatch' && (github.event.inputs.target == 'backend' || github.event.inputs.target == 'all')) ||
        (github.event_name == 'push' && needs.changes.outputs.backend == 'true')
      )

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth configure-docker ${{ env.REGISTRY }}

      - name: Build Backend Docker image
        run: |
          docker build \
            --tag ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/flip-fullstack-test-backend:${{ github.sha }} \
            --tag ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/flip-fullstack-test-backend:latest \
            ./backend

      - name: Push Backend Docker image
        run: |
          docker push ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/flip-fullstack-test-backend:${{ github.sha }}
          docker push ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/flip-fullstack-test-backend:latest

      - name: Deploy Backend to Cloud Run
        run: |
          gcloud run deploy flip-fullstack-test-backend \
            --image ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/flip-fullstack-test-backend:${{ github.sha }} \
            --platform managed \
            --region ${{ env.REGION }} \
            --allow-unauthenticated \
            --port 9000 \
            --memory 512Mi \
            --cpu 1 \
            --min-instances 0 \
            --max-instances 10 \
            --timeout 300 \
            --set-env-vars "ENV=production" \
            --labels "app=flip-fullstack-test,tier=backend,managed-by=github-actions"

      - name: Get Backend Service URL
        id: backend-url
        run: |
          SERVICE_URL=$(gcloud run services describe flip-fullstack-test-backend \
            --platform managed \
            --region ${{ env.REGION }} \
            --format 'value(status.url)')
          echo "url=$SERVICE_URL" >> $GITHUB_OUTPUT
          echo "🚀 Backend deployed to: $SERVICE_URL"

      - name: Summary
        run: |
          echo "## 🎉 Backend Deployed!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Service:** flip-fullstack-test-backend" >> $GITHUB_STEP_SUMMARY
          echo "**Region:** ${{ env.REGION }}" >> $GITHUB_STEP_SUMMARY
          echo "**URL:** ${{ steps.backend-url.outputs.url }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📝 Next: Update Frontend Secret" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
          echo "gh secret set NEXT_PUBLIC_API_URL -b \"${{ steps.backend-url.outputs.url }}\"" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY

  # Deploy Frontend
  deploy-frontend:
    name: Deploy Frontend
    runs-on: ubuntu-latest
    needs: [changes]
    if: |
      always() &&
      (needs.changes.result == 'skipped' || needs.changes.result == 'success') &&
      (
        (github.event_name == 'workflow_dispatch' && (github.event.inputs.target == 'frontend' || github.event.inputs.target == 'all')) ||
        (github.event_name == 'push' && needs.changes.outputs.frontend == 'true')
      )

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}

      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth configure-docker ${{ env.REGISTRY }}

      - name: Build Frontend Docker image
        run: |
          docker build \
            --tag ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/flip-fullstack-test-frontend:${{ github.sha }} \
            --tag ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/flip-fullstack-test-frontend:latest \
            --build-arg NEXT_PUBLIC_API_URL=${{ env.NEXT_PUBLIC_API_URL }} \
            ./frontend

      - name: Push Frontend Docker image
        run: |
          docker push ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/flip-fullstack-test-frontend:${{ github.sha }}
          docker push ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/flip-fullstack-test-frontend:latest

      - name: Deploy Frontend to Cloud Run
        run: |
          gcloud run deploy flip-fullstack-test-frontend \
            --image ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/flip-fullstack-test-frontend:${{ github.sha }} \
            --platform managed \
            --region ${{ env.REGION }} \
            --allow-unauthenticated \
            --port 3000 \
            --memory 512Mi \
            --cpu 1 \
            --min-instances 0 \
            --max-instances 10 \
            --timeout 300 \
            --set-env-vars "NODE_ENV=production,NEXT_PUBLIC_API_URL=${{ env.NEXT_PUBLIC_API_URL }}" \
            --labels "app=flip-fullstack-test,tier=frontend,managed-by=github-actions"

      - name: Get Frontend Service URL
        id: frontend-url
        run: |
          SERVICE_URL=$(gcloud run services describe flip-fullstack-test-frontend \
            --platform managed \
            --region ${{ env.REGION }} \
            --format 'value(status.url)')
          echo "url=$SERVICE_URL" >> $GITHUB_OUTPUT
          echo "🚀 Frontend deployed to: $SERVICE_URL"

      - name: Summary
        run: |
          echo "## 🎉 Frontend Deployed!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Service:** flip-fullstack-test-frontend" >> $GITHUB_STEP_SUMMARY
          echo "**Region:** ${{ env.REGION }}" >> $GITHUB_STEP_SUMMARY
          echo "**URL:** ${{ steps.frontend-url.outputs.url }}" >> $GITHUB_STEP_SUMMARY

